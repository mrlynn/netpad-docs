"use strict";(self.webpackChunkdocs_netpad_io=self.webpackChunkdocs_netpad_io||[]).push([[8237],{8453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>o});var s=r(6540);const t={},d=s.createContext(t);function i(e){const n=s.useContext(d);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),s.createElement(d.Provider,{value:n},e.children)}},9026:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"developer/modular-node-system","title":"Modular Node System (2025+)","description":"NetPad\u2019s modular node system (introduced in Sprint 5) allows you to add or update node types in a single file, ensuring maintainability, type safety, and seamless browser/server compatibility.","source":"@site/docs/developer/modular-node-system.md","sourceDirName":"developer","slug":"/developer/modular-node-system","permalink":"/docs/developer/modular-node-system","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/developer/modular-node-system.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docs","previous":{"title":"NetPad Architecture Overview","permalink":"/docs/developer/architecture"},"next":{"title":"Extending NetPad: Adding New Shape Types","permalink":"/docs/developer/extending-netpad"}}');var t=r(4848),d=r(8453);const i={},o="Modular Node System (2025+)",l={},a=[{value:"Key Principles",id:"key-principles",level:2},{value:"How to Add a New Node (Step-by-Step)",id:"how-to-add-a-new-node-step-by-step",level:2},{value:"1. <strong>Create the Node Definition File</strong>",id:"1-create-the-node-definition-file",level:3},{value:"2. <strong>Enable in Registry</strong>",id:"2-enable-in-registry",level:3},{value:"3. <strong>Add to Palette (Optional)</strong>",id:"3-add-to-palette-optional",level:3},{value:"4. <strong>Create the Runner (if needed)</strong>",id:"4-create-the-runner-if-needed",level:3},{value:"5. <strong>Test the Node</strong>",id:"5-test-the-node",level:3},{value:"Advanced Features",id:"advanced-features",level:2},{value:"FAQ",id:"faq",level:2},{value:"Resources",id:"resources",level:2}];function c(e){const n={a:"a",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,d.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"modular-node-system-2025",children:"Modular Node System (2025+)"})}),"\n",(0,t.jsxs)(n.p,{children:["NetPad\u2019s ",(0,t.jsx)(n.strong,{children:"modular node system"})," (introduced in Sprint 5) allows you to add or update node types in a single file, ensuring maintainability, type safety, and seamless browser/server compatibility."]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"key-principles",children:"Key Principles"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Single-file definitions"})," in ",(0,t.jsx)(n.code,{children:"/src/app/node-system/definitions/"})]}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"All metadata, property definitions, validation, factory, and runner reference in one place"})}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Zero breaking changes"}),"\u2014legacy system automatically falls back for older nodes"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Browser/server safety"}),"\u2014no Node.js-only dependencies in the browser bundle"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"how-to-add-a-new-node-step-by-step",children:"How to Add a New Node (Step-by-Step)"}),"\n",(0,t.jsxs)(n.h3,{id:"1-create-the-node-definition-file",children:["1. ",(0,t.jsx)(n.strong,{children:"Create the Node Definition File"})]}),"\n",(0,t.jsxs)(n.p,{children:["Copy an existing node (e.g., ",(0,t.jsx)(n.code,{children:"ChatNode.js"}),") and update fields:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"// src/app/node-system/definitions/MyNewNode.js\nimport { z } from 'zod';\n\nconst MyNewNodeDefinition = {\n  type: 'my_new_node',\n  label: 'My New Node',\n  description: 'What this node does',\n  category: 'Utilities',\n  version: '1.0.0',\n  appearance: {\n    icon: 'Settings',\n    color: '#4caf50',\n    defaultSize: { width: 120, height: 80 },\n    style: 'rounded-rect'\n  },\n  ports: {\n    input: [{ id: 'input1', label: 'Input', type: 'any' }],\n    output: [\n      { id: 'output1', label: 'Output', type: 'any' },\n      { id: 'error', label: 'Error', type: 'error' }\n    ]\n  },\n  properties: [\n    {\n      section: 'Configuration',\n      fields: [\n        { name: 'myProperty', type: 'text', label: 'My Property', required: true, default: 'default value' }\n      ]\n    }\n  ],\n  runtime: { runner: 'myNewNodeRunner', timeout: 30000, async: true },\n  validation: {\n    schema: z.object({\n      myProperty: z.string().min(1, 'Required')\n    })\n  },\n  create: (params = {}) => ({\n    id: params.id || `node_${Date.now()}`,\n    type: 'my_new_node',\n    label: params.label || 'My New Node',\n    x: params.x || 0,\n    y: params.y || 0,\n    width: 120,\n    height: 80,\n    params: { myProperty: '', ...params.params }\n  })\n};\n\nexport default MyNewNodeDefinition;\n"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.h3,{id:"2-enable-in-registry",children:["2. ",(0,t.jsx)(n.strong,{children:"Enable in Registry"})]}),"\n",(0,t.jsxs)(n.p,{children:["Add your node type to ",(0,t.jsx)(n.code,{children:"browserSafeTypes"})," in ",(0,t.jsx)(n.code,{children:"/src/app/node-system/core/NodeTypeRegistry.js"})," and ",(0,t.jsx)(n.code,{children:"modernSafeTypes"})," in ",(0,t.jsx)(n.code,{children:"/src/app/components/tabs/ModernPropertiesTab.js"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"const browserSafeTypes = ['agent_node', 'chat_node', ..., 'my_new_node'];\nconst modernSafeTypes = ['agent_node', 'chat_node', ..., 'my_new_node'];\n"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.h3,{id:"3-add-to-palette-optional",children:["3. ",(0,t.jsx)(n.strong,{children:"Add to Palette (Optional)"})]}),"\n",(0,t.jsxs)(n.p,{children:["In ",(0,t.jsx)(n.code,{children:"/src/app/components/ShapePalette.js"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"{ type: 'my_new_node', label: 'My New Node', icon: Settings }\n"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.h3,{id:"4-create-the-runner-if-needed",children:["4. ",(0,t.jsx)(n.strong,{children:"Create the Runner (if needed)"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"/src/app/runners/myNewNodeRunner.js"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"export async function runMyNewNode(node, { getInput, setOutput, trigger, context, log }) {\n  try {\n    const input = await getInput('input1');\n    const result = processInput(input, node.params.myProperty);\n    setOutput('output1', result);\n    await trigger('output1');\n  } catch (error) {\n    log(`Error in ${node.type}: ${error.message}`);\n    setOutput('error', error.message);\n    await trigger('error');\n  }\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Register in ",(0,t.jsx)(n.code,{children:"/src/app/engine/executionEngine.js"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"import { runMyNewNode } from '../runners/myNewNodeRunner';\n\nconst defaultNodeRunners = {\n  ...,\n  my_new_node: runMyNewNode,\n};\n"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.h3,{id:"5-test-the-node",children:["5. ",(0,t.jsx)(n.strong,{children:"Test the Node"})]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"It appears in the palette"}),"\n",(0,t.jsx)(n.li,{children:"Can be created/placed on canvas"}),"\n",(0,t.jsx)(n.li,{children:"Properties panel displays defined fields"}),"\n",(0,t.jsx)(n.li,{children:"Validation works"}),"\n",(0,t.jsx)(n.li,{children:"Node executes in workflows (if applicable)"}),"\n",(0,t.jsx)(n.li,{children:"Persists correctly in saves/loads"}),"\n",(0,t.jsx)(n.li,{children:"No browser/server errors"}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"advanced-features",children:"Advanced Features"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Complex Properties:"})," Use property types ",(0,t.jsx)(n.code,{children:"multiline"}),", ",(0,t.jsx)(n.code,{children:"select"}),", ",(0,t.jsx)(n.code,{children:"boolean"}),", ",(0,t.jsx)(n.code,{children:"nodeSelect"}),", etc."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Custom Validation:"})," Add Zod schema and/or custom ",(0,t.jsx)(n.code,{children:"validate"})," function."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Custom Visuals:"})," Provide a custom React renderer for specialized UIs."]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"faq",children:"FAQ"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Q: My node isn\u2019t in the palette?"}),(0,t.jsx)(n.br,{}),"\n","A: Make sure it\u2019s in both the palette and the browser/modern safe type lists."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Q: Properties panel doesn\u2019t work?"}),(0,t.jsx)(n.br,{}),"\n","A: Check ",(0,t.jsx)(n.code,{children:"properties"})," field, and ensure the node type is using the modern system."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Q: Runner not found?"}),(0,t.jsx)(n.br,{}),"\n","A: Use a string reference, not direct import. Register runner in the execution engine."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Q: Breaking changes?"}),(0,t.jsx)(n.br,{}),"\n","A: The modular system is fully backward compatible\u2014legacy fallback is automatic."]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"resources",children:"Resources"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/docs/developer/extending-netpad",children:"Extending NetPad"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/docs/developer/architecture",children:"Architecture Guide"})}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.p,{children:"The modular node system enables rapid, safe, and scalable growth for NetPad\u2014build confidently!"})]})}function p(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}}}]);