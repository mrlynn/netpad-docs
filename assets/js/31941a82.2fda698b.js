"use strict";(self.webpackChunkdocs_netpad_io=self.webpackChunkdocs_netpad_io||[]).push([[2892],{3431:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>u,frontMatter:()=>t,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"developer/architecture","title":"NetPad Architecture Overview","description":"NetPad is a collaborative, agentic workflow builder and SVG diagram editor, designed for extensibility, performance, and modern developer experience.","source":"@site/docs/developer/architecture.md","sourceDirName":"developer","slug":"/developer/architecture","permalink":"/docs/developer/architecture","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/developer/architecture.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docs","previous":{"title":"Terms of Service","permalink":"/docs/legal/terms-of-service"},"next":{"title":"Modular Node System (2025+)","permalink":"/docs/developer/modular-node-system"}}');var i=r(4848),o=r(8453);const t={},d="NetPad Architecture Overview",l={},a=[{value:"System Overview",id:"system-overview",level:2},{value:"Core Layers",id:"core-layers",level:3},{value:"Directory Structure",id:"directory-structure",level:2},{value:"Key Components",id:"key-components",level:2},{value:"1. Node System (Modular)",id:"1-node-system-modular",level:3},{value:"2. Execution Engine",id:"2-execution-engine",level:3},{value:"3. Persistence",id:"3-persistence",level:3},{value:"4. Collaboration",id:"4-collaboration",level:3},{value:"Typical Workflow",id:"typical-workflow",level:2},{value:"Modern Node Example (Key Elements)",id:"modern-node-example-key-elements",level:2},{value:"Development Standards",id:"development-standards",level:2},{value:"See Also",id:"see-also",level:2},{value:"Architecture Diagram",id:"architecture-diagram",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"netpad-architecture-overview",children:"NetPad Architecture Overview"})}),"\n",(0,i.jsx)(n.p,{children:"NetPad is a collaborative, agentic workflow builder and SVG diagram editor, designed for extensibility, performance, and modern developer experience."}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"system-overview",children:"System Overview"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"NetPad"})," enables developers and domain experts to create, run, and share agentic workflows visually, with robust backend support for real-time collaboration, persistence, and extensibility."]}),"\n",(0,i.jsx)(n.h3,{id:"core-layers",children:"Core Layers"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Frontend:"})," Next.js (App Router), React 18+, Material UI 5+"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Backend:"})," Node.js API routes, MongoDB Atlas for persistence"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Node System:"})," Modular, browser/server-safe, lazy-loaded node definitions"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Execution Engine:"})," Graph traversal, node runners, context/state propagation"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Plugin & Migration Layer:"})," Legacy system fallback for older nodes, plugin support planned"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"directory-structure",children:"Directory Structure"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"src/app/node-system/\n\u251c\u2500\u2500 core/\n\u2502   \u251c\u2500\u2500 NodeTypeRegistry.js      # Single source of node types, browser/server safety\n\u2502   \u251c\u2500\u2500 NodeTypeLoader.js        # Loads node definitions (DB + fallback)\n\u2502   \u251c\u2500\u2500 NodeTypeSchema.js        # Unified Zod validation for node parameters\n\u2502   \u2514\u2500\u2500 NodeTypeContext.js       # React context for node types\n\u251c\u2500\u2500 definitions/                 # Each modern node type in a single file\n\u2502   \u251c\u2500\u2500 AgentNode.js\n\u2502   \u251c\u2500\u2500 ChatNode.js\n\u2502   \u251c\u2500\u2500 CodeNode.js\n\u2502   \u251c\u2500\u2500 MemoryNode.js\n\u2502   \u2514\u2500\u2500 (others...)\n\u251c\u2500\u2500 components/\n\u2502   \u251c\u2500\u2500 NodeRenderer.js          # Universal renderer for nodes\n\u2502   \u251c\u2500\u2500 PropertyRenderer.js      # Generic property editor for nodes\n\u2502   \u2514\u2500\u2500 custom/                  # For rare custom components\n\u251c\u2500\u2500 runners/                     # Node execution functions (string-referenced)\n\u251c\u2500\u2500 utils/\n\u2502   \u2514\u2500\u2500 migration.js             # Migration & legacy support utilities\n\u2514\u2500\u2500 index.js                     # Barrel exports\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"key-components",children:"Key Components"}),"\n",(0,i.jsx)(n.h3,{id:"1-node-system-modular",children:"1. Node System (Modular)"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"All node logic (type, label, ports, properties, validation, runner, etc.) is in one file per node."}),"\n",(0,i.jsx)(n.li,{children:"Nodes are browser/server safe by default\u2014no server dependencies in browser bundles."}),"\n",(0,i.jsx)(n.li,{children:"Gradual migration: old node types use the legacy system, new ones use modular."}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"2-execution-engine",children:"2. Execution Engine"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Loads node definitions dynamically"}),"\n",(0,i.jsxs)(n.li,{children:["Each node has a ",(0,i.jsx)(n.code,{children:"runner"})," (referenced by string), which is invoked during workflow execution"]}),"\n",(0,i.jsx)(n.li,{children:"Supports context propagation, error handling, tracing"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"3-persistence",children:"3. Persistence"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Diagrams and workflows are stored in MongoDB Atlas in canonical JSON format"}),"\n",(0,i.jsx)(n.li,{children:"All data is validated using Zod schemas"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"4-collaboration",children:"4. Collaboration"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Real-time editing powered by websockets (planned)"}),"\n",(0,i.jsx)(n.li,{children:"User sessions and RBAC (role-based access control) with NextAuth.js"}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"typical-workflow",children:"Typical Workflow"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Editor loads node types from NodeTypeRegistry"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"User creates or edits diagram using visual canvas"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Node definitions provide metadata, ports, properties, validation, runner, and factory"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"When executed, engine calls the runner for each node, passing inputs/outputs/context"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Diagrams and execution logs are persisted in MongoDB Atlas"})}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"modern-node-example-key-elements",children:"Modern Node Example (Key Elements)"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"// src/app/node-system/definitions/AgentNode.js\nexport default {\n  type: 'agent_node',\n  label: 'Agent Node',\n  appearance: { icon: 'Person', color: '#2196f3' },\n  ports: {\n    input: [{ id: 'input1', label: 'Input', type: 'any' }],\n    output: [{ id: 'output1', label: 'Success', type: 'any' }]\n  },\n  properties: [\n    {\n      section: 'Agent',\n      fields: [\n        { name: 'systemPrompt', type: 'multiline', label: 'System Prompt', default: 'You are a helpful AI assistant.' }\n      ]\n    }\n  ],\n  runtime: { runner: 'agentNodeRunner', timeout: 30000, async: true },\n  create: (params = {}) => ({\n    id: params.id || `agent_${Date.now()}`,\n    type: 'agent_node',\n    label: params.label || 'Agent Node',\n    params: { ...params.params }\n  })\n};\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"development-standards",children:"Development Standards"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Always reference runners by string key (never direct import in node definition)"}),"\n",(0,i.jsx)(n.li,{children:"Use Zod for validation in node definitions"}),"\n",(0,i.jsx)(n.li,{children:"Add new nodes via the modular system first (legacy fallback is automatic)"}),"\n",(0,i.jsx)(n.li,{children:"Keep all node properties serializable and browser-safe"}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"see-also",children:"See Also"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"/docs/developer/modular-node-system",children:"Modular Node System: How to Add/Update Nodes"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"/docs/developer/data-model",children:"Data Model"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"/docs/developer/extending-netpad",children:"Extending NetPad"})}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"architecture-diagram",children:"Architecture Diagram"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-mermaid",children:"graph TD\n  Canvas[Visual Canvas/Editor] --\x3e|loads| NodeRegistry[NodeTypeRegistry.js]\n  NodeRegistry --\x3e|loads| Definitions[Node Definitions]\n  Canvas --\x3e|saves/loads| MongoDB[(MongoDB Atlas)]\n  Canvas --\x3e|executes| ExecutionEngine[Execution Engine]\n  ExecutionEngine --\x3e|calls| Runners[Node Runners]\n  ExecutionEngine --\x3e|logs| MongoDB\n  NodeRegistry --\x3e|fallback| LegacyNodeSystem[Legacy Node System]\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"For troubleshooting or extending NetPad, always start with the modular node system and this architecture guide."})})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>t,x:()=>d});var s=r(6540);const i={},o=s.createContext(i);function t(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);