"use strict";(self.webpackChunkdocs_netpad_io=self.webpackChunkdocs_netpad_io||[]).push([[9668],{1338:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>i,contentTitle:()=>d,default:()=>h,frontMatter:()=>c,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"developer/data-model","title":"Data Model: MongoDB Persistence","description":"NetPad uses MongoDB Atlas for cloud persistence of diagrams, shapes, and user data. All MongoDB access is handled via connectDB from @/lib/mongodb.","source":"@site/docs/developer/data-model.md","sourceDirName":"developer","slug":"/developer/data-model","permalink":"/docs/developer/data-model","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/developer/data-model.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docs","previous":{"title":"Extending NetPad: Adding New Shape Types","permalink":"/docs/developer/extending-netpad"}}');var o=s(4848),t=s(8453);const c={},d="Data Model: MongoDB Persistence",i={},l=[{value:"Diagram Document Structure",id:"diagram-document-structure",level:2},{value:"Shape Object Structure",id:"shape-object-structure",level:2},{value:"Connector Object Structure",id:"connector-object-structure",level:2},{value:"Best Practices",id:"best-practices",level:2}];function a(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"data-model-mongodb-persistence",children:"Data Model: MongoDB Persistence"})}),"\n",(0,o.jsxs)(n.p,{children:["NetPad uses MongoDB Atlas for cloud persistence of diagrams, shapes, and user data. All MongoDB access is handled via ",(0,o.jsx)(n.code,{children:"connectDB"})," from ",(0,o.jsx)(n.code,{children:"@/lib/mongodb"}),"."]}),"\n",(0,o.jsx)(n.h2,{id:"diagram-document-structure",children:"Diagram Document Structure"}),"\n",(0,o.jsx)(n.p,{children:"A typical diagram document in MongoDB includes:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "_id": ObjectId,\n  "userId": "user@example.com" | null, // null for anonymous\n  "title": "Network Diagram",\n  "createdAt": ISODate,\n  "updatedAt": ISODate,\n  "shapes": [ ... ], // Array of shape objects\n  "connections": [ ... ], // Array of connector objects\n  // ...other metadata\n}\n'})}),"\n",(0,o.jsx)(n.h2,{id:"shape-object-structure",children:"Shape Object Structure"}),"\n",(0,o.jsxs)(n.p,{children:["Each shape in the ",(0,o.jsx)(n.code,{children:"shapes"})," array should have:"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"id"}),": Unique identifier"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"type"}),": Shape type (e.g., rectangle, circle, hexagon, etc.)"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"x"}),", ",(0,o.jsx)(n.code,{children:"y"}),": Position"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"width"}),", ",(0,o.jsx)(n.code,{children:"height"}),": Dimensions"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"label"}),": Text label"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"fill"}),": Fill color"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"stroke"}),": Stroke color"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"strokeWidth"}),": Stroke width"]}),"\n",(0,o.jsx)(n.li,{children:"Shape-specific properties (e.g., points for polygons)"}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"connector-object-structure",children:"Connector Object Structure"}),"\n",(0,o.jsxs)(n.p,{children:["Each connector in the ",(0,o.jsx)(n.code,{children:"connections"})," array should have:"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"id"}),": Unique identifier"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"from"}),": Shape id and connector point"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"to"}),": Shape id and connector point"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"type"}),": Connector type (e.g., straight, elbow)"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"label"}),": Optional label"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"All shape and diagram properties must be serializable to MongoDB."}),"\n",(0,o.jsx)(n.li,{children:"Use Mongoose models for validation and schema enforcement."}),"\n",(0,o.jsxs)(n.li,{children:["Support both anonymous and authenticated users (use ",(0,o.jsx)(n.code,{children:"userId"})," or ",(0,o.jsx)(n.code,{children:"sessionId"}),")."]}),"\n",(0,o.jsx)(n.li,{children:"Store timestamps for auditing and sorting."}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["For more details, see the code in ",(0,o.jsx)(n.code,{children:"src/models/Shape.js"})," and related files."]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>c,x:()=>d});var r=s(6540);const o={},t=r.createContext(o);function c(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:c(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);